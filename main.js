!function(){"use strict";const e=".popup__form";class t{constructor(e,t){let{data:s,handleCardImageClick:i}=e;this._data=s,this._name=s.name,this._link=s.link,this._templateSelector=t,this._handleCardImageClick=i}createCard(){return this._card=this._getElement(),this._cardTitle=this._card.querySelector(".card__title"),this._cardImage=this._card.querySelector(".card__image"),this._cardLikeButton=this._card.querySelector(".card__like-button"),this._cardDeleteButton=this._card.querySelector(".card__delete-button"),this._cardTitle.textContent=this._name,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._setEventListeners(),this._card}_getElement(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}_listenCardLikeButtonClick(){this._cardLikeButton.addEventListener("click",(()=>{this._toggleCardLikeButton()}))}_toggleCardLikeButton(){this._cardLikeButton.classList.toggle("card__like-button_clicked")}_listenCardDeleteButtonClick(){this._cardDeleteButton.addEventListener("click",(()=>{this._deleteCard()}))}_deleteCard(){this._card.remove(),this._card=null}_listenCardImageClick(){this._cardImage.addEventListener("click",(()=>{this._handleCardImageClick(this._data)}))}_setEventListeners(){this._listenCardLikeButtonClick(),this._listenCardDeleteButtonClick(),this._listenCardImageClick()}}class s{constructor(e,t){this._settings=e,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._settings.inputSelector)),this._buttonElement=this._formElement.querySelector(this._settings.submitButtonSelector)}enableValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._settings.inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._settings.inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_showInputError(e,t){const s=this._formElement.querySelector(`.${e.id}-error`);e.classList.add(this._settings.inputErrorClass),s.textContent=t,s.classList.add(this._settings.errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass),t.textContent=""}}class i{constructor(e){var t,s;s=e=>{"Escape"===e.key&&this.close()},(t="_handleEscClose")in this?Object.defineProperty(this,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):this[t]=s,this._selector=e,this._element=document.querySelector(this._selector)}open(){this._element.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._element.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._element.addEventListener("mousedown",(e=>{e.target===e.currentTarget&&this.close()})),this._element.addEventListener("click",(e=>{e.target.classList.contains("popup__close-button")&&this.close()}))}}class n extends i{constructor(t,s){let{submitForm:i}=s;super(t),this._submitForm=i,this._form=this._element.querySelector(e),this._inputList=this._element.querySelectorAll(".popup__input")}close(){super.close(),this._form.reset()}getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._element.addEventListener("submit",this._submitForm)}}const r=document.querySelector(".profile__edit-button"),o=document.querySelector(".profile__add-button"),a={},l=new class{constructor(e){let{userNameSelector:t,userTitleSelector:s}=e;this._userName=document.querySelector(t),this._userTitle=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,title:this._userTitle.textContent}}setUserInfo(e){let{formInputName:t,formInputTitle:s}=e;this._userName.textContent=t,this._userTitle.textContent=s}}({userNameSelector:".profile__name",userTitleSelector:".profile__title"}),c=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._element=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._element.prepend(t)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>function(e){return new t({data:e,handleCardImageClick:e=>{u.open(e)}},"#card-template").createCard()}(e)},".cards"),u=new class extends i{constructor(e){super(e),this._image=this._element.querySelector(".popup__image"),this._subtitle=this._element.querySelector(".popup__subtitle")}open(e){this._image.src=e.link,this._image.alt=`Image ${e.name}`,this._subtitle.textContent=e.name,super.open()}}(".popup_type_image"),_=new n(".popup_type_edit",{submitForm:e=>{e.preventDefault();const{name:t,title:s}=_.getInputValues();l.setUserInfo({formInputName:t,formInputTitle:s}),_.close()}}),d=new n(".popup_type_add",{submitForm:e=>{e.preventDefault();const{title:t,link:s}=d.getInputValues();c.addItem({name:t,link:s}),d.close()}});var h;c.renderItems(),u.setEventListeners(),_.setEventListeners(),d.setEventListeners(),h={inputSelector:".popup__input",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_inactive",inputErrorClass:"popup__input_error",errorClass:"popup__input-error-text_active"},Array.from(document.querySelectorAll(e)).forEach((e=>{const t=new s(h,e),i=e.getAttribute("name");a[i]=t,t.enableValidation()})),r.addEventListener("click",(()=>{a["profile-form"].resetValidation(),function(){const e=l.getUserInfo();_.setInputValues(e)}(),_.open()})),o.addEventListener("click",(()=>{a["card-form"].resetValidation(),d.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,